{"version":3,"file":"static/js/427.28e67ec7.chunk.js","mappings":"sSA4EA,UArEc,WACZ,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjBC,GAAgCC,EAAAA,EAAAA,UAAS,CACvCC,MAAO,GACPC,SAAU,KACVC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAHKM,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAKpBF,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAETK,EAAe,SAAAC,GACnBF,GAAWG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIJ,GAAQ,IAAAK,EAAAA,EAAAA,GAAA,GAAGF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,QACvD,EAEMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMX,GAAC,IAAAY,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACP,OAAnBhB,EAAEiB,iBAAiBH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGME,EAAAA,EAAMC,KAAK,eAAgBtB,GAAU,KAAD,EAArDe,EAAQE,EAAAM,KACdC,QAAQC,IAAI,mFAAmBV,EAASW,MAGxCpC,GAASqC,EAAAA,EAAAA,IAAQZ,EAASW,OAG1BlC,EAAS,aAGTS,EAAY,CACVL,MAAO,GACPC,SAAU,KACToB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAEHO,QAAQK,MAAM,sGAAqBZ,EAAAW,IAAS,yBAAAX,EAAAa,OAAA,GAAAhB,EAAA,mBAE/C,gBArBiBiB,GAAA,OAAArB,EAAAsB,MAAA,KAAAC,UAAA,KAuBlB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAC,WACzBD,EAAAA,EAAAA,MAAA,QAAMK,SAAU9B,EAAa0B,SAAA,EAC3BC,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CACRC,KAAK,QACLlC,KAAK,QACLmC,MAAM,QACNlC,MAAOZ,EACP+C,SAAUzC,EACV0C,UAAQ,KAEVR,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CACRC,KAAK,WACLlC,KAAK,WACLmC,MAAM,WACNlC,MAAOX,EACP8C,SAAUzC,EACV0C,UAAQ,KAEVR,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACJ,KAAK,SAASH,QAAQ,YAAYQ,MAAM,UAASX,SAAC,eAI5DD,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAAAF,SAAA,CAAC,2BACaC,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAG,YAAWb,SAAC,kBAIpD,C","sources":["pages/Login/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { setUser } from '../../redux/authSlice';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Button, TextField, Typography } from '@mui/material';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formData;\n\n  const handleChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post('/users/login', formData);\n      console.log('Успішний логін:', response.data);\n\n      // Диспетчеризуємо дію для оновлення авторизації користувача\n      dispatch(setUser(response.data));\n\n      // Перенаправляємо користувача на сторінку \"Контакти\"\n      navigate('/contacts');\n\n      // Очищуємо дані форми\n      setFormData({\n        email: '',\n        password: '',\n      });\n    } catch (error) {\n      console.error('Помилка при логіні:', error);\n    }\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\">Login</Typography>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          type=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={handleChange}\n          required\n        />\n        <TextField\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          value={password}\n          onChange={handleChange}\n          required\n        />\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Log in\n        </Button>\n      </form>\n      <Typography>\n        Don't have an account? <Link to=\"/register\">Register</Link>\n      </Typography>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["dispatch","useDispatch","navigate","useNavigate","_useState","useState","email","password","_useState2","_slicedToArray","formData","setFormData","handleChange","e","_objectSpread","_defineProperty","target","name","value","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","preventDefault","axios","post","sent","console","log","data","setUser","t0","error","stop","_x","apply","arguments","_jsxs","children","_jsx","Typography","variant","onSubmit","TextField","type","label","onChange","required","Button","color","Link","to"],"sourceRoot":""}