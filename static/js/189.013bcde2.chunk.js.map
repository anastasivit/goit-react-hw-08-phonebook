{"version":3,"file":"static/js/189.013bcde2.chunk.js","mappings":"qPAGaA,GAAYC,EAAAA,EAAAA,IACvB,iBAAgB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAChB,SAAAC,EAAOC,EAAQC,GAAA,IAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAmB,OAAfL,EAAeD,EAAfC,gBAAeG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEPC,EAAAA,EAAMC,KAC3B,oDACAT,GACA,KAAD,EAHa,OAARG,EAAQE,EAAAK,KAAAL,EAAAM,OAAA,SAKPR,EAASS,MAAI,cAAAP,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAM,OAAA,SAEbT,EAAgBG,EAAAQ,GAAMV,SAASS,OAAK,yBAAAP,EAAAS,OAAA,GAAAf,EAAA,kBAE9C,gBAAAgB,EAAAC,GAAA,OAAArB,EAAAsB,MAAA,KAAAC,UAAA,EAZe,I,SCmDlB,EAnDc,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAwCT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAK9BG,EAAY,eAAAlC,GAAAL,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMqC,GAAK,IAAApC,EAAA,OAAAH,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAM7B,OALD6B,EAAMC,iBAEArC,EAAW,CACfyB,MAAAA,EACAI,SAAAA,GACDxB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGOY,EAAS1B,EAAUO,IAAW,KAAD,EACnCkC,GAAgB,GAAM7B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEtBiC,QAAQC,MAAM,gGAAoBlC,EAAAQ,IAAS,yBAAAR,EAAAS,OAAA,GAAAf,EAAA,kBAE9C,gBAdiBgB,GAAA,OAAAd,EAAAgB,MAAA,KAAAC,UAAA,KAgBlB,OACEsB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mCACHR,GACCS,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iMAEHD,EAAAA,EAAAA,MAAA,QAAMG,SAAUR,EAAaM,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEE,KAAK,QACLC,YAAY,8FACZC,MAAOrB,EACPsB,SA9BgB,SAAAX,GAAK,OAAIV,EAASU,EAAMY,OAAOF,MAAO,KAgCxDJ,EAAAA,EAAAA,KAAA,SACEE,KAAK,WACLC,YAAY,uCACZC,MAAOjB,EACPkB,SAnCmB,SAAAX,GAAK,OAAIN,EAAYM,EAAMY,OAAOF,MAAO,KAqC9DJ,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQH,SAAC,8CAKhC,C","sources":["redux/userActions.js","pages/Login/Login/Login.jsx"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const loginUser = createAsyncThunk(\n  'user/loginUser',\n  async (userData, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(\n        'https://connections-api.herokuapp.com/users/login',\n        userData\n      );\n\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from '../../../redux/userActions';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginSuccess, setLoginSuccess] = useState(false);\n\n  const handleEmailChange = event => setEmail(event.target.value);\n  const handlePasswordChange = event => setPassword(event.target.value);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const userData = {\n      email,\n      password,\n    };\n\n    try {\n      await dispatch(loginUser(userData));\n      setLoginSuccess(true);\n    } catch (error) {\n      console.error('Помилка при вході:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Логін</h2>\n      {loginSuccess ? (\n        <p>Логін успішний! Ви увійшли в систему.</p>\n      ) : (\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"email\"\n            placeholder=\"Електронна пошта\"\n            value={email}\n            onChange={handleEmailChange}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Пароль\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n          <button type=\"submit\">Увійти</button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["loginUser","createAsyncThunk","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userData","_ref","rejectWithValue","response","wrap","_context","prev","next","axios","post","sent","abrupt","data","t0","stop","_x","_x2","apply","arguments","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loginSuccess","setLoginSuccess","handleSubmit","event","preventDefault","console","error","_jsxs","children","_jsx","onSubmit","type","placeholder","value","onChange","target"],"sourceRoot":""}